//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace multigyms.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MultigymEntities1 : DbContext
    {
        public MultigymEntities1()
            : base("name=MultigymEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MG_Bancos> MG_Bancos { get; set; }
        public virtual DbSet<MG_Ciudades> MG_Ciudades { get; set; }
        public virtual DbSet<MG_Disciplinas> MG_Disciplinas { get; set; }
        public virtual DbSet<MG_Empresa> MG_Empresa { get; set; }
        public virtual DbSet<MG_FormaPago> MG_FormaPago { get; set; }
        public virtual DbSet<MG_GiftCards> MG_GiftCards { get; set; }
        public virtual DbSet<MG_Gym> MG_Gym { get; set; }
        public virtual DbSet<MG_Gym_Contacto> MG_Gym_Contacto { get; set; }
        public virtual DbSet<MG_Gym_Disc> MG_Gym_Disc { get; set; }
        public virtual DbSet<MG_Gym_Serv> MG_Gym_Serv { get; set; }
        public virtual DbSet<MG_Pagos> MG_Pagos { get; set; }
        public virtual DbSet<MG_Persona> MG_Persona { get; set; }
        public virtual DbSet<MG_Planes> MG_Planes { get; set; }
        public virtual DbSet<mg_reviews> mg_reviews { get; set; }
        public virtual DbSet<MG_Servicios> MG_Servicios { get; set; }
        public virtual DbSet<MG_TipoEntidad> MG_TipoEntidad { get; set; }
        public virtual DbSet<MG_Visitas> MG_Visitas { get; set; }
    
        public virtual ObjectResult<Nullable<bool>> Chk_Credencial_Persona(string login, string password)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Chk_Credencial_Persona", loginParameter, passwordParameter);
        }
    }
}
